events {}

http {
    upstream backend {
        server rust-axum-author-book-management-system-production.up.railway.app;
        server expressjs-author-book-management-system-production.up.railway.app;
    }

    server {
        listen 80;
        server_name example.com;  # Your domain

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name example.com;  # Your domain

        ssl_certificate /path/to/your/certificate.crt;  # Path to your SSL certificate
        ssl_certificate_key /path/to/your/private.key;   # Path to your SSL key

        # Strong SSL Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1h;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        location / {
            proxy_pass http://backend; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }
}
