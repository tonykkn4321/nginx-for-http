events {}

http {
    resolver 8.8.8.8;

    map $request_uri $backend {
        default expressjs-author-book-management-system-production.up.railway.app;
        ~^/golang/ golang-fiber-author-book-management-system-production.up.railway.app;
    }

    server {
        listen 80;

        location / {
            proxy_pass https://$backend;
            proxy_ssl_server_name on;
            proxy_set_header Host $backend;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}
